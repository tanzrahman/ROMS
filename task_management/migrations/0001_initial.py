# Generated by Django 5.0.6 on 2024-05-10 11:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('facility_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('short_description', models.CharField(blank=True, max_length=512, null=True)),
                ('kks_code', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'facility',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question_id', models.CharField(max_length=100)),
                ('question', models.TextField()),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='SubSystem',
            fields=[
                ('subsystem_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('code', models.CharField(blank=True, max_length=256, null=True)),
                ('short_description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'sub_system',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('system_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('code', models.CharField(blank=True, max_length=256, null=True)),
                ('short_description', models.CharField(blank=True, max_length=512, null=True)),
            ],
            options={
                'db_table': 'system',
            },
        ),
        migrations.CreateModel(
            name='SystemParameter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'system_parameter',
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_id', models.CharField(blank=True, max_length=256, null=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('hours', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateField(blank=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('planned_start_date', models.DateField(blank=True, null=True)),
                ('planned_end_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('activity_created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_created_by', to=settings.AUTH_USER_MODEL)),
                ('activity_executor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_executor', to=settings.AUTH_USER_MODEL)),
                ('activity_updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='activity_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity',
            },
        ),
        migrations.CreateModel(
            name='ActivityExecutorLink',
            fields=[
                ('ae_link', models.AutoField(primary_key=True, serialize=False)),
                ('activity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.activity')),
                ('executor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'activity_executor_link',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_date', models.DateField(blank=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('action_id', models.CharField(blank=True, max_length=100, null=True)),
                ('action_name', models.CharField(blank=True, max_length=256, null=True)),
                ('activity_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.activity')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Milestone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('job_id', models.CharField(default='', max_length=100)),
                ('milestone_id', models.CharField(blank=True, default='', max_length=256)),
                ('task_id', models.CharField(blank=True, default='', max_length=256)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.CharField(blank=True, max_length=32, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, null=True)),
                ('is_assigned', models.BooleanField(blank=True, default=False, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.system')),
            ],
            options={
                'db_table': 'Milestone',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('task_id', models.CharField(blank=True, default='', max_length=256)),
                ('stage', models.CharField(blank=True, default='', max_length=8)),
                ('relevant_kks_codes', models.CharField(blank=True, max_length=256, null=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.CharField(blank=True, max_length=128, null=True)),
                ('created_date', models.DateField(blank=True, null=True)),
                ('updated_date', models.DateField(blank=True, null=True)),
                ('planned_start_date', models.DateField(blank=True, null=True)),
                ('planned_end_date', models.DateField(blank=True, null=True)),
                ('actual_start_date', models.DateField(blank=True, null=True)),
                ('actual_end_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, null=True)),
                ('percent_completed', models.IntegerField(blank=True, default=0, null=True)),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.facility')),
                ('subsystem', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.subsystem')),
                ('supervisor', models.ManyToManyField(related_name='supervisors', to=settings.AUTH_USER_MODEL)),
                ('system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.system')),
                ('task_created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('task_executor', models.ManyToManyField(related_name='executors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='QuestionsAnswers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer', models.TextField()),
                ('answered_by', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('task_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.questions')),
                ('task_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task')),
            ],
            options={
                'db_table': 'questions_answers',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('hash', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('reference_count', models.IntegerField(default=1)),
                ('file_name', models.CharField(blank=True, max_length=256, null=True)),
                ('file_type', models.CharField(blank=True, max_length=20, null=True)),
                ('file_size', models.CharField(blank=True, max_length=20, null=True)),
                ('server_loc', models.CharField(blank=True, max_length=512, null=True)),
                ('activity_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.activity')),
                ('comment_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.comment')),
                ('task_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task')),
            ],
            options={
                'db_table': 'files',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task'),
        ),
        migrations.AddField(
            model_name='activity',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task'),
        ),
        migrations.CreateModel(
            name='TaskExecutorLink',
            fields=[
                ('te_link', models.AutoField(primary_key=True, serialize=False)),
                ('task_opened_time', models.DateTimeField(blank=True, null=True)),
                ('executor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('task_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task')),
            ],
            options={
                'db_table': 'task_executor_link',
            },
        ),
        migrations.CreateModel(
            name='TaskSupervisorLink',
            fields=[
                ('tslink_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_opened_time', models.DateTimeField(blank=True, null=True)),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('task_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task')),
            ],
            options={
                'db_table': 'task_supervisor_link',
            },
        ),
        migrations.CreateModel(
            name='UserSysSubSystemLink',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_system', models.ManyToManyField(blank=True, null=True, to='task_management.subsystem')),
                ('system', models.ManyToManyField(blank=True, null=True, to='task_management.system')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sys_subsystem_link',
            },
        ),
    ]
