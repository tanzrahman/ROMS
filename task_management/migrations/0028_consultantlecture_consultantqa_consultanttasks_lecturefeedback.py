# Generated by Django 3.2.16 on 2024-06-21 16:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('task_management', '0027_lecture_other_participants'),
    ]

    operations = [
        migrations.CreateModel(
            name='LectureFeedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('qa1', models.TextField(blank=True, null=True)),
                ('qa2', models.TextField(blank=True, null=True)),
                ('qa3', models.TextField(blank=True, null=True)),
                ('qa4', models.TextField(blank=True, null=True)),
                ('qa5', models.TextField(blank=True, null=True)),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.lecture')),
                ('participant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lecture_feedback',
            },
        ),
        migrations.CreateModel(
            name='ConsultantTasks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('review_report', models.TextField(blank=True, null=True)),
                ('consultant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.task')),
            ],
            options={
                'db_table': 'consultant_tasks',
            },
        ),
        migrations.CreateModel(
            name='ConsultantQA',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('qa1', models.TextField(blank=True, null=True)),
                ('qa2', models.TextField(blank=True, null=True)),
                ('qa4', models.TextField(blank=True, null=True)),
                ('qa5', models.TextField(blank=True, null=True)),
                ('qa6', models.TextField(blank=True, null=True)),
                ('qa7', models.TextField(blank=True, null=True)),
                ('qa8', models.TextField(blank=True, null=True)),
                ('qa10', models.TextField(blank=True, null=True)),
                ('consultant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='consultant', to=settings.AUTH_USER_MODEL)),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.lecture')),
                ('qa3', models.ManyToManyField(related_name='best_participants', to=settings.AUTH_USER_MODEL)),
                ('qa9', models.ManyToManyField(related_name='participant_need_improvement', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'consultant_QA',
            },
        ),
        migrations.CreateModel(
            name='ConsultantLecture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(null=True)),
                ('report_submitted_at', models.DateTimeField(null=True)),
                ('review_report', models.TextField(blank=True, null=True)),
                ('consultant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('lecture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='task_management.lecture')),
            ],
            options={
                'db_table': 'consultant_lecture',
            },
        ),
    ]
